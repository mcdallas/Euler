# e44.py

'''
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2.
The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8.
However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference
are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
'''

from math import sqrt

def pentagonal(n):
    return int(n*(3*n - 1)/2)

def ispentagonal(n):
    return ((sqrt(24*n+1)+1)/6).is_integer()

if __name__ == '__main__':
    pentagonals = set([pentagonal(1)])
    n = 2
    found = False
    while not found:
        x = pentagonal(n)
        pentagonals.add(x)
        for i in pentagonals:
            if ispentagonal(abs(x-i)) and ispentagonal(x+i):
                solution = abs(x-i)
                found = True
                break
        n += 1

    print(solution)
